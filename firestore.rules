rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read all users' profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      // Allow users to create their own profile and update it
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read all projects
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow write: if request.auth != null;
      
      // Allow project members to update their specific project
      allow update: if request.auth != null && (
        resource.data.creatorUid == request.auth.uid ||
        resource.data.roles[request.auth.uid] != null
      );
    }
    
    // Allow users to manage their own bookmarks
    match /users/{userId}/bookmarks/{bookmarkId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for notifications collection
    match /notifications/{notificationId} {
      // Allow users to read their own notifications
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Allow users to create notifications for projects they're part of
      allow create: if request.auth != null && (
        request.resource.data.userId == request.auth.uid ||
        exists(/databases/$(database)/documents/projects/$(request.resource.data.projectId)/roles/$(request.auth.uid))
      );
      // Allow users to update (mark as read) their own notifications
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
    }

    // Rules for ideas collection
    match /ideas/{ideaId} {
      // Anyone can read ideas
      allow read: if true;
      
      // Only authenticated users can create ideas
      allow create: if request.auth != null;
      
      // Only the creator can update or delete their ideas
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.creatorUid;
      
      // Allow likes and comments by authenticated users
      allow update: if request.auth != null 
        && (request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['likes', 'comments']));
    }

    // Default deny for anything not explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 